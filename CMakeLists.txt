CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)
PROJECT(phantompy)

#SET(CMAKE_BUILD_TYPE "Release")
SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_VERBOSE_MAKEFILE OFF)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC ON)
SET(BUILD_SHARED_LIBS ON)

#SET(CMAKE_CXX_COMPILER      "/usr/bin/clang++")
SET(CMAKE_CXX_FLAGS         "-Wall -std=c++11 -fPIC")
SET(CMAKE_CXX_FLAGS_DEBUG   "-O0 -g")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3")

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5WebKit_EXECUTABLE_COMPILE_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5WebKitWidgets_EXECUTABLE_COMPILE_FLAGS}")

FIND_PACKAGE(Qt5Core)
FIND_PACKAGE(Qt5WebKit)
FIND_PACKAGE(Qt5WebKit)
FIND_PACKAGE(Qt5WebKitWidgets)

FIND_LIBRARY(QJSON_LIB qjson /usr/lib /usr/local/lib)

IF(QJSON_LIB)
    MESSAGE(STATUS "Found qjson on: ${QJSON_LIB}")
ELSE(QJSON_LIB)
    MESSAGE(FATAL_ERROR "Can not find QJSON")
ENDIF(QJSON_LIB)


# Add include directories
INCLUDE_DIRECTORIES(
    ${CMAKE_BINARY_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
    ${Qt5Core_INCLUDE_DIRS}
    ${Qt5Widgets_INCLUDE_DIRS}
    ${Qt5WebKit_INCLUDE_DIRS}
    ${Qt5WebKitWidgets_INCLUDE_DIRS}
)

# Use the compile definitions defined in the Qt 5 Widgets module
ADD_DEFINITIONS(${Qt5Core_DEFINITIONS})
ADD_DEFINITIONS(${Qt5Widgets_DEFINITIONS})
ADD_DEFINITIONS(${Qt5WebKit_DEFINITIONS})
ADD_DEFINITIONS(${Qt5WebKitWidgets_DEFINITIONS})

IF(CMAKE_BUILD_TYPE MATCHES Release)
    MESSAGE(STATUS "Release build")
    ADD_DEFINITIONS(-DQT_NO_DEBUG)
    ADD_DEFINITIONS(-DQT_NO_DEBUG_OUTPUT)
ELSE()
    MESSAGE(STATUS "Debug build")
ENDIF()

SET(SOURCES
    lib/interface.cpp
    lib/interface_page.cpp
    lib/interface_frame.cpp
    lib/page.cpp
    lib/frame.cpp
    lib/image.cpp
    lib/webelement.cpp
)

ADD_LIBRARY(phantompy ${SOURCES})

TARGET_LINK_LIBRARIES(
    phantompy
    ${QJSON_LIB}
    ${Qt5Core_LIBRARIES}
    ${Qt5Widgets_LIBRARIES}
    ${Qt5WebKit_LIBRARIES}
    ${Qt5WebKitWidgets_LIBRARIES}
)

SET_TARGET_PROPERTIES(phantompy PROPERTIES VERSION 0.0.1)

SET(CMAKE_INSTALL_PREFIX /usr)
INSTALL(TARGETS phantompy DESTINATION lib/)
